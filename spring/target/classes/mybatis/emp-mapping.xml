<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emp">

	<!-- crud : insert select update delete -->
	<!-- resultType = 어떤 타입으로 1개의 레코드를 반환받을 것이냐 결정 -->
	<select id="allemp" resultType="emp">
		select * from employees
	</select>
	
	<!-- 파라미터에 어떤 타입이 들어갈 것인가? -->
	<!-- resultType = "emp" 를 mybatis-config.xml 에 typeAliases에 정의해서 사용한다. -->
	<select id="oneemp" resultType="emp" parameterType="int">
		select * from employees where employee_id = #{a}
	</select>

	<select id="nameemp" resultType="emp" parameterType="String">
		select * from employees where first_name = #{name}
	</select>

	<!-- ~~라고 시작하는 사람이 있나요? -->
	<!-- session.selectList("namelikeemp","%P" -->
	<select id="namelikeemp" resultType="emp" parameterType="String">
		select * from employees where first_name LIKE #{n}
	</select>

	<!-- 작다 < 를 표현하려니 태그로 인식한다 어떻게 해야할까? -->
	<!-- <![CDATA[문자열]] xml 태그로 인식하지마!-->
	<select id="idemp" resultType="emp" parameterType="int">
		<![CDATA[select employee_id from employees where employee_id < #{id}]]>
	</select>

	<!-- 날짜 변경 표현-->
	<select id="dateemp" resultType="emp">
		<![CDATA[select employee_id,first_name,
		to_char(hire_date, 'mm/dd/yyyy hh"시"mi"분":ss"초"') as hire_date from employees where employee_id < 150]]>
	</select>

	<!-- first_name 과 last_name 을 합쳐서 하나의 이름으로 보내주자! 중간에 공백도 한번 첨가-->
	<select id="superemp" resultType="emp">
		<![CDATA[select first_name || ' ' || last_name first_name from employees where employee_id < 150]]>
	</select>
	
	<!-- 객체를 받아서 insert 할떄는 객체가 가진 멤버변수 명으로 변수명을 지정해줘야한다 -->
	<insert id="newemp" parameterType="emp">
		insert into employees(employee_id, first_name, last_name, email, job_id, hire_date) 
		values 
		(#{employee_id}, #{first_name}, #{last_name}, #{email}, #{job_id}, sysdate)
	</insert>
	
	<!--  수정해보자 -->
	<update id="updateemp" parameterType="emp">
		update employees set first_name= #{first_name}, email= #{email} where employee_id = #{employee_id}
	</update>

	<!--  삭제해보자 -->
	<delete id="deleteemp" parameterType="int">
		delete employees where employee_id= #{id}
	</delete>
	
	<!-- 한페이지에 열명씩 보여주는 걸 만들어보자! -->
	<select id="pagingemp" resultType="emp" parameterType="int[]">
	select first_name, to_char(hire_date, 'yy-mm-dd') hire_date
	from(select rownum r, first_name, hire_date
		from (select * from employees order by hire_date desc)
		)
	where r between #{array[0]} and #{array[1]}
	</select>
</mapper>








